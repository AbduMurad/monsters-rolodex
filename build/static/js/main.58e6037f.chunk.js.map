{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","name","alt","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAgBeA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,KAAlC,0BACHC,IAAI,YAEN,6BAAKJ,EAAQG,OACb,4BAAIH,EAAQK,YCGHC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,qBAAKN,UAAU,YAAf,SACGM,EAASC,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAyBA,QAASA,GAAvBA,EAAQG,YCMZM,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEV,UAAU,SACVW,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCiCDI,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC7B,GAAD,OACvCA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,aAAcgB,KAAKhB,aACnBD,YAAa,sBAEf,cAAC,EAAD,CAAUH,SAAUqB,W,GA/BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58e6037f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${monster.name}?set=set3&size=180x180`}\r\n        alt=\"A Robot\"\r\n      />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport Card from \"../card/card.component\";\r\n\r\nfunction CardList({ monsters }) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.name} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import react from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nconst SearchBox = ({ placeHolder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeHolder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          placeHolder={\"Search monsters..\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}